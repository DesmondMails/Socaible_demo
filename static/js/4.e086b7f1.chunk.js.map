{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","active","to","name","Message","message","maxLength10","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","messagesPage","messagesElements","messages","map","m","dialogsElements","dialogs","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sGCapMC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,OAA3C,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCFvBC,EAJC,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAMM,QAAtB,SAAgCV,EAAMU,W,0CCmC3CC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,OAG7B,8BACI,kDAQDa,EAnDC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,aAEdC,EAAmBF,EAAMG,SACxBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAoBpB,QAASoB,EAAEpB,SAAjBoB,EAAE5B,OAE1B6B,EAAkBN,EAAMO,QACvBH,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,IAASG,EAAOH,OAM7E,OAAKF,EAAMiC,OAGP,sBAAK9B,UAAWC,IAAM4B,QAAtB,UACI,qBAAK7B,UAAWC,IAAM8B,aAAtB,SACKH,IAGL,qBAAK5B,UAAWC,IAAMwB,SAAtB,SACI,8BAAMD,MAEV,cAACd,EAAD,CAAqBG,SAfT,SAACmB,GACjBnC,EAAMoC,YAAYD,EAAOE,sBAGH,cAAC,IAAD,CAAU9B,GAAG,Y,+CCnBvC+B,EAA0B,SAACb,GAAD,MAAY,CACtCQ,OAAQR,EAAMc,KAAKN,S,OCcRO,sBACXC,aAZkB,SAAChB,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAGH,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GAAoBK,EAASC,YAAmBN,UDPtC,SAACO,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK9C,MAAMiC,OAGT,cAACW,EAAD,eAAeE,KAAK9C,QAFhB,cAAC,IAAD,CAAUO,GAAG,eALW,GAEXwC,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAiCI,KCC3DL,CAGbhB","file":"static/js/4.e086b7f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1IF0X\",\"dialogsItems\":\"Dialogs_dialogsItems__3xH4G\",\"dialog\":\"Dialogs_dialog__f5fZc\",\"active\":\"Dialogs_active__1QEnE\",\"messages\":\"Dialogs_messages__3p7wo\",\"message\":\"Dialogs_message__32WWf\"};","import React from 'react'\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={style.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage;\r\n\r\n    let messagesElements = state.messages\r\n        .map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>;\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth){\r\n                return <Redirect to='/login'/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react'\r\nimport {sendMessageCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}